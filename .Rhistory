setwd("~/Documents/GitHub/WIN File Creation")
library(tidyverse)
library(readxl)
library(dplyr)
library(readr)
library(lubridate)
### Data Import ----
TP <- read_csv("Data/Project Coast/TP Stacked.csv")
TN <- read_csv("Data/Project Coast/TN Stacked.csv")
CHL_cor <- read_csv("Data/Project Coast/Chl cor Stacked.csv")
CHL_un <- read_csv("Data/Project Coast/Chl un Stacked.csv")
Secchi <- read_csv("Data/Project Coast/Secchi Stacked.csv")
### Functions ----
## FOR ALL PARAMETERS ##
# For changing T value qualifiers to U
t_value_qualifiers <- function(Value_Qualifier){
ifelse(Value_Qualifier == "T" | Value_Qualifier == "TI", "U",
ifelse(Value_Qualifier == "QTI", "QU",
ifelse(Value_Qualifier == "S", "S", NA)))
}
## FOR SECCHI ONLY ##
# If value qualifier = S, then total Depth needs to = org result value.
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value) {
if(Value_Qualifier == "S") {
Total_Depth <- Org_Result_Value
} else {
Value_Qualifier <- NA
}
return(Org_Result_Value)
}
#For blank org result value, org result value should = "Not Reported".
not_reported_secchi <- function(Org_Result_Value){
ifelse(is.na(Org_Result_Value), "Not Reported", Org_Result_Value)
}
### SECCHI ----
#Change format of times
v1<- c(Secchi$Activity_Start_Time)
x <- lubridate::parse_date_time(v1,'H:M:S')
format(x, format = '%I:%M:%S %p')
#change format of dates
v2<- c(Secchi$Activity_Start_Date)
x2 <- lubridate::parse_date_time(v2,'"%m%d%y"')
format(x2, format = '%m/%d/%Y')
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value) {
ifelse(Value_Qualifier == "S", Org_Result_Value, NA)
}
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
View(Secchi_t)
source("~/Documents/GitHub/WIN File Creation/Scripts/Project Coast File Creation with functions testing.R")
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value, Total_Depth) {
ifelse(Value_Qualifier == "S", Org_Result_Value == Total_Depth, NA)
}
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value, Total_Depth)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value, Total_Depth) {
ifelse(Value_Qualifier == "S", Org_Result_Value <- Total_Depth, NA)
}
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value, Total_Depth)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
TP <- read_csv("Data/Project Coast/TP Stacked.csv")
TN <- read_csv("Data/Project Coast/TN Stacked.csv")
CHL_cor <- read_csv("Data/Project Coast/Chl cor Stacked.csv")
CHL_un <- read_csv("Data/Project Coast/Chl un Stacked.csv")
Secchi <- read_csv("Data/Project Coast/Secchi Stacked.csv")
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value, Total_Depth) {
ifelse(Value_Qualifier == "S", Org_Result_Value <- Total_Depth, NA)
}
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value, Total_Depth)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
View(Secchi_t)
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value, Total_Depth) {
ifelse(Value_Qualifier == "S", Total_Depth, Org_Result_Value)
}
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value, Total_Depth)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
View(Secchi_t)
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value, Total_Depth) {
Org_Result_Value[Value_Qualifier == "S"] <- Total_Depth[Value_Qualifier == "S"]
return(Org_Result_Value)
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value, Total_Depth)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
View(Secchi_t)
View(Secchi_t)
library(tidyverse)
library(readxl)
library(dplyr)
library(readr)
library(lubridate)
### Data Import ----
TP <- read_csv("Data/Project Coast/TP Stacked.csv")
TN <- read_csv("Data/Project Coast/TN Stacked.csv")
CHL_cor <- read_csv("Data/Project Coast/Chl cor Stacked.csv")
CHL_un <- read_csv("Data/Project Coast/Chl un Stacked.csv")
Secchi <- read_csv("Data/Project Coast/Secchi Stacked.csv")
### Functions ----
## FOR ALL PARAMETERS ##
# For changing T value qualifiers to U
t_value_qualifiers <- function(Value_Qualifier){
ifelse(Value_Qualifier == "T" | Value_Qualifier == "TI", "U",
ifelse(Value_Qualifier == "QTI", "QU",
ifelse(Value_Qualifier == "S", "S", NA)))
}
## FOR SECCHI ONLY ##
# If value qualifier = S, then total Depth needs to = org result value.
# s_value_qualifiers <- function(Value_Qualifier){
#   if(Value_Qualifier=="S"){
#     Total_Depth <- Org_Result_Value
#   }else{
#     Value_Qualifier <- NA
#   }
#   return(Org_Result_Value)
# }
s_value_qualifiers <- function(Value_Qualifier, Org_Result_Value, Total_Depth) {
Org_Result_Value[Value_Qualifier == "S"] <- Total_Depth[Value_Qualifier == "S"]
return(Org_Result_Value)
}
#For blank org result value, org result value should = "Not Reported".
not_reported_secchi <- function(Org_Result_Value){
ifelse(is.na(Org_Result_Value), "Not Reported", Org_Result_Value)
}
### SECCHI ----
#Change format of times
v1<- c(Secchi$Activity_Start_Time)
x <- lubridate::parse_date_time(v1,'H:M:S')
format(x, format = '%I:%M:%S %p')
#change format of dates
v2<- c(Secchi$Activity_Start_Date)
x2 <- lubridate::parse_date_time(v2,'"%m%d%y"')
format(x2, format = '%m/%d/%Y')
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier)) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value, Total_Depth)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
View(Secchi_t)
Change format of times
#Change format of times
v3 <- c(TP$Analysis_Time)
x3 <- lubridate::parse_date_time(v3,'H:M:S')
format(x3, format = '%I:%M:%S %p')
#Change format of times
v4<- c(TP$Preparation_Time)
x4 <- lubridate::parse_date_time(v4,'H:M:S')
format(x4, format = '%I:%M:%S %p')
#change format of dates
v5<- c(TP$Activity_Start_Date)
x5 <- lubridate::parse_date_time(v5,'"%m%d%y"')
format(x5, format = '%m/%d/%Y')
TP_t = TP%>%
mutate('Activity_Start_Date'=format(x5, format = '%m/%d/%Y')) %>%
mutate('Analysis_Time'=format(x2, format = '%I:%M:%S %p'))%>%
mutate('Preparation_Time'=format(x3, format = '%I:%M:%S %p'))%>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier))
TP <- read_csv("Data/Project Coast/TP Stacked.csv")
TN <- read_csv("Data/Project Coast/TN Stacked.csv")
CHL_cor <- read_csv("Data/Project Coast/Chl cor Stacked.csv")
CHL_un <- read_csv("Data/Project Coast/Chl un Stacked.csv")
Secchi <- read_csv("Data/Project Coast/Secchi Stacked.csv")
#Change format of times
v3 <- c(TP$Analysis_Time)
x3 <- lubridate::parse_date_time(v3,'H:M:S')
format(x3, format = '%I:%M:%S %p')
#Change format of times
v4<- c(TP$Preparation_Time)
x4 <- lubridate::parse_date_time(v4,'H:M:S')
format(x4, format = '%I:%M:%S %p')
#change format of dates
v5<- c(TP$Activity_Start_Date)
x5 <- lubridate::parse_date_time(v5,'"%m%d%y"')
format(x5, format = '%m/%d/%Y')
TP_t = TP%>%
mutate('Activity_Start_Date'=format(x5, format = '%m/%d/%Y')) %>%
mutate('Analysis_Time'=format(x2, format = '%I:%M:%S %p'))%>%
mutate('Preparation_Time'=format(x3, format = '%I:%M:%S %p'))%>%
mutate(Value_Qualifier = t_value_qualifiers(Value_Qualifier))
View(TP_t)
View(TP)
Secchi_t <- Secchi%>%
mutate('Activity_Start_Time'=format(x, format = '%I:%M:%S %p')) %>%
mutate('Activity_Start_Date'=format(x2, format = '%m/%d/%Y')) %>%
mutate(Value_Qualifier = ifelse(Value_Qualifier %in% c("T", "TI"), "U",
ifelse(Value_Qualifier == "QTI", "QU", Value_Qualifier))) %>%
mutate(Value_Qualifier = s_value_qualifiers(Value_Qualifier, Org_Result_Value, Total_Depth)) %>%
mutate(Org_Result_Value = not_reported_secchi(Org_Result_Value))
TP_t = TP%>%
mutate('Activity_Start_Date'=format(x5, format = '%m/%d/%Y')) %>%
mutate('Analysis_Time'=format(x2, format = '%I:%M:%S %p'))%>%
mutate('Preparation_Time'=format(x3, format = '%I:%M:%S %p'))%>%
mutate(Value_Qualifier = ifelse(Value_Qualifier %in% c("T", "TI"), "U",
ifelse(Value_Qualifier == "QTI", "QU", Value_Qualifier)))
View(TP_t)
View(TP)
View(CHL_cor)
